% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/picrq.R
\name{picrq}
\alias{picrq}
\title{Fit the partly interval-censored AFT model with quantile regressions}
\usage{
picrq(
  L,
  R,
  delta,
  x,
  tau,
  estimation = NULL,
  var.estimation = NULL,
  wttype = "param",
  hlimit = NULL,
  id = NULL,
  index = 1,
  maxit = 100,
  tol = 0.001
)
}
\arguments{
\item{L}{left-censoring time, having 0 if left-censored.}

\item{R}{right-censoring time, having \code{Inf} if right-censored.}

\item{delta}{censoring indicator, 1: observed; 0: interval-censored.}

\item{x}{X matrix of baseline covariates.}

\item{tau}{quantile level.}

\item{estimation}{estimating method of partly interval censored, default is "NULL" and if estimation="dr", doubly robust estimator is estimated.}

\item{var.estimation}{estimating method of variance, if var.estimation="IS", induced smoothing method is used, else if var.estimation="bootstrap", bootstrap estimating method of Zeng and Lin is used.}

\item{wttype}{weight estimating method, default is "param", Beran's nonparametric KM estimating method as "Beran", and Ishwaran's nonparametric survival random forests estimating method as "Ishwaran"}

\item{hlimit}{bandwidth value, set \code{hlimit=NULL}.}

\item{id}{cluster id. If the data does not have clustered structure, set \code{id=NULL}.}

\item{index}{index of cluster weight.}

\item{maxit}{maximum number of iteration for the IPCW method estimator, default is 100.}

\item{tol}{tolerance of iteration for the IPCW method estimator, default is 1e-3.}
}
\value{
\code{picrq} returns a data frame containing at least the following components:
\itemize{
\item \code{tau}: quantile level.
\item \code{coefficients}: regression estimator.
\item \code{se}: standard error estimates for \code{est}.
\item \code{pvalue}: p-value.
\item \code{lower bd}: lower bound of coefficients under 95\% confidence level.
\item \code{upper bd}: upper bound of coefficients under 95\% confidence level.
}
}
\description{
Fit inverse weighted quantile regression with partially interval-censored data
}
\details{
see Kim et al., (2022+) for detailed method explanation.
}
\examples{
\dontrun{
# Simulations
set.seed(111)
n = 200
x1 = runif(n,-1,1)
x2 = rbinom(n,1,0.43)
x = cbind(x1,x2)
T = 2 + x1 + x2 + rnorm(n)
U = (1 - 0.25*x1)*runif(n, -6, 5)
V = U + (1 - 0.1*x2)*runif(n, 6, 20)
U = exp(dplyr::case_when(TRUE ~ T, T>V ~ V, T<U ~ -Inf))
V = exp(dplyr::case_when(TRUE ~ T, T>V ~ Inf, T<U ~ U))
delta = ifelse(U==V, 1, 0)
tau=0.3
picrq(L=V,R=U,delta=delta,x=x,tau=tau,wttype="param",var.estimation="IS")
picrq(L=V,R=U,delta=delta,x=x,tau=tau,wttype = "Beran",hlimit=0.1,var.estimation="IS")
picrq(L=V,R=U,delta=delta,x=x,tau=tau,wttype = "Ishwaran",var.estimation="IS")

# Data example
library(PICBayes)
data("mCRC")
d = with(data.frame(mCRC), data.frame(U = ifelse(y==0,R,L),
                                      V = ifelse(y==2,L,R),
                                      # Cluster weighted data
                                      id=(rep(c(table(SITE)),c(table(SITE)))),
                                      # Treatment arm: 0 = FOLFIRI alone, 1 = Panitumumab + FOLFIRI.
                                      x1= case_when(TRT_C == 0 ~ 0, #Pan et al data
                                                    TRT_C == 1 ~ 1),
                                      # Tumor KRAS mutation status: 0 = wild-type, 1 = mutant.
                                      x2= case_when(KRAS_C == 0 ~ 1,
                                                    KRAS_C == 1 ~ 0),
                                      delta = case_when(IC == 0 ~ 1,
                                                        IC == 1 ~ 0)
));
L=d$U;R=d$V; delta=d$delta
L=(log(d$U));R=log(d$V); delta=d$delta
x = cbind(d$x1,d$x2); id=d$id;  tau=0.1;
picrq(L,R,delta,x=x,tau=tau,id=id,index=1,wttype="param",var.estimation="IS")
picrq(L,R,delta,x=x,tau=tau,id=id,index=1,wttype="param",var.estimation="bootstrap")
picrq(L,R,delta,x=x,tau=tau,id=id,index=1,wttype = "Beran",hlimit = 0.9,var.estimation="bootstrap")
}
}
\references{
Beran, R. (1981). Nonparametric Regression with Randomly Censored Survival Data. Technical Report, Univ.California, Berkeley.

Ishwaran, H., U. B. Kogalur, E. H. Blackstone, and M. S. Lauer (2008). Random survival forests. The annals of applied statistics. 2 (3), 841–860.

Gorfine, M., Y. Goldberg, and Y. Ritov (2017). A quantile regression model for failure-time data with time-dependent covariates. Biostatistics. 18 (1), 132–146.

Chiou, S. H., Kang, S. and Yan, J. (2015). Rank-based estimating equations with general weight for accelerated failure time models: an induced smoothing approach. Statistics in Medicine 34(9): 1495–-1510.

Zeng, D. and D. Lin (2008). Efficient resampling methods for nonsmooth estimating functions. Biostatistics 9 (2), 355–363.

Kim, Y., Choi, T., Park, S., Choi, S. and Bandyopadhyay, D. (2023+). Inverse weighted quantile regression with partially interval-censored data.

Pan, C. (2021). PICBayes: Bayesian Models for Partly Interval-Censored Data. R package. https://CRAN.R-project.org/package=PICBayes.
}
